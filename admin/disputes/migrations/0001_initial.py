# Generated by Django 3.1 on 2024-01-17 10:23

from django.db import migrations, models
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='CabinetChecksTerms',
            fields=[
                ('uid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True, verbose_name='ID')),
                ('is_agent', models.CharField(choices=[('yes', 'Да'), ('no', 'Нет'), ('skip', 'Не важно')], max_length=10, verbose_name='Есть агент')),
                ('more_days', models.IntegerField(blank=True, null=True, verbose_name='Больше скольки дней сделка должна находиться в текущем статусе')),
                ('less_days', models.IntegerField(blank=True, null=True, verbose_name='Меньше скольки дней сделка должна находиться в текущем статусе')),
                ('is_assign_agency_status', models.CharField(choices=[('yes', 'Да'), ('no', 'Нет'), ('skip', 'Не важно')], default='skip', max_length=10, verbose_name="Была ли сделка в статусе 'Фиксация за АН'")),
                ('assigned_to_agent', models.BooleanField(blank=True, null=True, verbose_name='Закреплен за проверяющим агентом')),
                ('assigned_to_another_agent', models.BooleanField(blank=True, null=True, verbose_name='Закреплен за другим агентом проверяющего агентства')),
                ('priority', models.IntegerField(help_text='Чем меньше приоритет тем раньше проверяется условие', verbose_name='Приоритет')),
                ('send_admin_email', models.BooleanField(default=False, verbose_name='Отправлять письмо администраторам при проверке клиента в данном статусе')),
                ('send_rop_email', models.BooleanField(default=False, verbose_name='Отправлять письмо РОПам при проверке клиента в данном статусе')),
                ('comment', models.TextField(blank=True, help_text='Внутренний комментарий по назначению статуса', null=True, verbose_name='Комментарий')),
            ],
            options={
                'verbose_name': 'Условие проверки',
                'verbose_name_plural': '6.2. Условия проверки статуса уникальности',
                'db_table': 'users_checks_terms',
                'ordering': ['priority'],
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CheckHistory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('client_phone', models.CharField(blank=True, help_text='Номер телефона', max_length=20, null=True, verbose_name='Номер телефона')),
                ('created_at', models.DateTimeField(blank=True, null=True, verbose_name='Запрошено')),
                ('term_uid', models.CharField(blank=True, max_length=255, null=True, verbose_name='UID условия проверки на уникальность')),
                ('term_comment', models.TextField(blank=True, null=True, verbose_name='Комментарий к условию проверки на уникальность')),
                ('lead_link', models.TextField(blank=True, null=True, verbose_name='Ссылка на сделку')),
            ],
            options={
                'verbose_name': 'Проверка',
                'verbose_name_plural': '6.3. [Исторические данные] История проверок на уникальность',
                'db_table': 'users_checks_history',
                'ordering': ['-created_at'],
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CitiesThrough',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'verbose_name': 'Город',
                'verbose_name_plural': 'Города',
                'db_table': 'users_checks_terms_cities',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ConfirmClientAssign',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('assigned_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата и время закрепления')),
                ('assign_confirmed_at', models.DateTimeField(blank=True, null=True, verbose_name='Дата и время подтверждения закрепления')),
                ('unassigned_at', models.DateTimeField(blank=True, null=True, verbose_name='Дата и время отказа от агента')),
                ('comment', models.TextField(blank=True, null=True, verbose_name='Комментарий агента при закреплении')),
            ],
            options={
                'verbose_name': 'Подтверждение закрепления клиента за агентом',
                'verbose_name_plural': '6.4. [Исторические данные] Подтверждения закрепления клиента за агентом',
                'db_table': 'users_confirm_client_assign',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Dispute',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('requested', models.DateTimeField(blank=True, null=True, verbose_name='Запрошено')),
                ('dispute_requested', models.DateTimeField(blank=True, null=True, verbose_name='Время оспаривания')),
                ('status_fixed', models.BooleanField(default=False, verbose_name='Закрепить статус за клиентом')),
                ('django_admin_email', models.CharField(blank=True, max_length=100, null=True, verbose_name='Email')),
                ('comment', models.TextField(blank=True, verbose_name='Комментарий агента')),
                ('admin_comment', models.TextField(blank=True, verbose_name='Комментарий менеджера')),
                ('send_admin_email', models.BooleanField(default=False, verbose_name='Отправлено письмо администраторам')),
                ('send_rop_email', models.BooleanField(default=False, verbose_name='Отправлено письмо РОПу')),
                ('amocrm_id', models.IntegerField(blank=True, null=True, verbose_name='ID сделки в amoCRM, по которой была проверка')),
                ('term_uid', models.CharField(blank=True, max_length=255, verbose_name='UID условия проверки на уникальность')),
                ('term_comment', models.TextField(blank=True, verbose_name='Комментарий к условию проверки на уникальность')),
                ('button_slug', models.CharField(blank=True, max_length=255, verbose_name='Слаг кнопки')),
                ('button_pressed', models.BooleanField(default=False, verbose_name='Кнопка была нажата')),
            ],
            options={
                'verbose_name': 'Статус клиента',
                'verbose_name_plural': '6.5. [Справочник] Текущие статусы проверки клиентов',
                'db_table': 'users_checks',
                'ordering': ['requested'],
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DisputeStatus',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='Название')),
            ],
            options={
                'verbose_name': 'статус оспаривания',
                'verbose_name_plural': '6.9. [Справочник] Статусы оспаривания',
                'db_table': 'users_dispute_statuses',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PinningStatus',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('priority', models.IntegerField(help_text='Чем меньше приоритет тем раньше проверяется условие', verbose_name='Приоритет')),
                ('comment', models.TextField(blank=True, help_text='Внутренний комментарий по назначению статуса', null=True, verbose_name='Комментарий')),
            ],
            options={
                'verbose_name': 'Статус закрепления',
                'verbose_name_plural': '6.1. Условия определения статуса закрепления',
                'db_table': 'users_pinning_status',
                'ordering': ['priority'],
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PinningStatusCity',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'verbose_name': 'Город',
                'verbose_name_plural': 'Города',
                'db_table': 'users_pinning_status_cities',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PinningStatusPipeline',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'verbose_name': 'Воронка',
                'verbose_name_plural': 'Воронки',
                'db_table': 'users_pinning_status_pipelines',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PinningStatusStatus',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'verbose_name': 'Статус',
                'verbose_name_plural': 'Статусы',
                'db_table': 'users_pinning_status_statuses',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PipelinesThrough',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'verbose_name': 'Воронка',
                'verbose_name_plural': 'Воронки',
                'db_table': 'users_checks_terms_pipelines',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='StatusesThrough',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'verbose_name': 'Статус',
                'verbose_name_plural': 'Статусы',
                'db_table': 'users_checks_terms_statuses',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UniqueStatus',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='Выделено жирным на странице проверки', max_length=255, verbose_name='Заголовок')),
                ('subtitle', models.CharField(blank=True, help_text='Выводится под заголовком на странице проверки', max_length=255, null=True, verbose_name='Подзаголовок')),
                ('icon', models.CharField(choices=[('icon', 'Иконка'), ('image', 'Изображение'), ('warning', 'Предупреждение'), ('checkSolution', 'Решение'), ('dot', 'Точка'), ('notPinned', 'Не закреплено')], max_length=36, verbose_name='Иконка')),
                ('color', models.CharField(blank=True, default='#8F00FF', help_text='HEX код цвета названия статуса на странице проверки, по умолчанию - фиолетовый', max_length=7, null=True, verbose_name='Цвет текста')),
                ('background_color', models.CharField(blank=True, default='#8F00FF', help_text='HEX код цвета подложки под иконкой на странице проверки,  по умолчанию - фиолетовый', max_length=7, null=True, verbose_name='Цвет фона')),
                ('border_color', models.CharField(blank=True, default='#8F00FF', help_text='HEX код цвета рамки иконки на странице проверки,  по умолчанию - фиолетовый', max_length=7, null=True, verbose_name='Цвет рамки')),
                ('slug', models.CharField(blank=True, max_length=255, null=True, verbose_name='Слаг')),
                ('style_list', models.CharField(blank=True, choices=[('default', 'По умолчанию'), ('success', 'Успешно'), ('danger', 'Опасно'), ('warning', 'Предупреждение'), ('info', 'Информация'), ('primary', 'Первичный'), ('secondary', 'Вторичный'), ('light', 'Светлый'), ('dark', 'Темный'), ('white', 'Белый'), ('transparent', 'Прозрачный')], help_text='Стиль статуса, который будет выводиться на странице списка клиентов', max_length=36, null=True, verbose_name='Стиль в списке')),
                ('type', models.CharField(blank=True, choices=[('pinning', 'Статус закрепления'), ('unique', 'Статус уникальности')], help_text='Используется для сбора значений фильтра по статусу закрепления.', max_length=36, null=True, verbose_name='Тип')),
                ('comment', models.TextField(blank=True, help_text='Внутренний комментарий по назначению статуса', null=True, verbose_name='Комментарий')),
                ('stop_check', models.BooleanField(default=False, verbose_name='Остановить проверку')),
            ],
            options={
                'verbose_name': 'Статус уникальности',
                'verbose_name_plural': '6.6. Статусы уникальности / закрепления',
                'db_table': 'users_unique_statuses',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UniqueStatusButton',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(blank=True, max_length=255, null=True, verbose_name='Текст')),
                ('slug', models.CharField(blank=True, max_length=255, null=True, verbose_name='Слаг')),
                ('background_color', models.CharField(blank=True, default='#8F00FF', max_length=7, null=True, verbose_name='Цвет фона')),
                ('text_color', models.CharField(blank=True, default='#FFFFFF', max_length=7, null=True, verbose_name='Цвет текста')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Описание')),
            ],
            options={
                'verbose_name': 'Кнопка для статуса уникальности',
                'verbose_name_plural': '6.7. Кнопки для статусов уникальности',
                'db_table': 'users_unique_statuses_buttons',
                'managed': False,
            },
        ),
    ]
