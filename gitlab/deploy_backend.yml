.before_script_configure_ssh: &before_script_configure_ssh 
  - '[[ ! -d /root/.ssh ]] && mkdir /root/.ssh && chmod 700 /root/.ssh'
  - '[[ -f /.dockerenv ]] && echo -e "Host *\\n\\tStrictHostKeyChecking no\\n\\n" > ~/.ssh/config'
  - 'which ssh-agent || ( apk --update add openssh-client )'
  - echo "$SSH_PRIVATE_KEY_NEW_DEV" | tr -d '\r' > /root/.ssh/id_rsa && chmod 600 /root/.ssh/id_rsa
  - eval "$(ssh-agent -s)"
  - ssh-add /root/.ssh/id_rsa
  - ssh-keyscan -p22 -t rsa 158.160.60.57 >> /root/.ssh/known_hosts
  - chmod 644 ~/.ssh/known_hosts

.before_script_configure_ssh_prod: &before_script_configure_ssh_prod
  - '[[ ! -d /root/.ssh ]] && mkdir /root/.ssh && chmod 700 /root/.ssh'
  - '[[ -f /.dockerenv ]] && echo -e "Host *\\n\\tStrictHostKeyChecking no\\n\\n" > ~/.ssh/config'
  - 'which ssh-agent || ( apk --update add openssh-client )'
  - echo "$SSH_PRIVATE_KEY_PROD" | tr -d '\r' > /root/.ssh/id_rsa && chmod 600 /root/.ssh/id_rsa
  - eval "$(ssh-agent -s)"
  - ssh-add /root/.ssh/id_rsa
  - ssh-keyscan -p22 -t rsa 51.250.40.140 >> /root/.ssh/known_hosts
  - chmod 644 ~/.ssh/known_hosts

.before_script_configure_ssh_pre-production: &before_script_configure_ssh_pre-production
  - '[[ ! -d /root/.ssh ]] && mkdir /root/.ssh && chmod 700 /root/.ssh'
  - '[[ -f /.dockerenv ]] && echo -e "Host *\\n\\tStrictHostKeyChecking no\\n\\n" > ~/.ssh/config'
  - 'which ssh-agent || ( apk --update add openssh-client )'
  - echo "$SSH_PRIVATE_KEY_FRONT_STAGE" | tr -d '\r' > /root/.ssh/id_rsa && chmod 600 /root/.ssh/id_rsa
  - eval "$(ssh-agent -s)"
  - ssh-add /root/.ssh/id_rsa
  - ssh-keyscan -p22 -t rsa 158.160.4.117 >> /root/.ssh/known_hosts
  - chmod 644 ~/.ssh/known_hosts

.before_script_docker_login: &before_script_docker_login
  - docker login $CI_REGISTRY -u'strana-registry-token' -p$REGISTRY_TOKEN

# --- DEV ---
to_dev_cabinet:
  stage: deploy
  only:
    refs:
      - development
    changes:
      - cabinet/**/*      
  variables:
    DOCKER_HOST: ssh://$DEPLOY_USER_NEW_DEV@$DEPLOY_HOST_NEW_DEV
  before_script:
    - *before_script_configure_ssh
    - *before_script_docker_login
    - cat $ENV_NEW_DEV_FULL_FILE > .env
  script:
    - TAG=${CI_COMMIT_SHA} docker-compose -f docker-compose.yml -f docker-compose.production.yml pull cabinet || true
    - TAG=${CI_COMMIT_SHA} docker-compose -f docker-compose.yml -f docker-compose.production.yml   --env-file .env up -d cabinet tasks
  tags:
    - docker  
  needs:
    - job: build-cabinet

to_dev_admin:
  stage: deploy
  only:
    refs:
      - development
    changes:
      - admin/**/*      
  variables:
    DOCKER_HOST: ssh://$DEPLOY_USER_NEW_DEV@$DEPLOY_HOST_NEW_DEV
  before_script:
    - *before_script_configure_ssh
    - *before_script_docker_login
    - cat $ENV_NEW_DEV_FULL_FILE > .env
  script:
    - TAG=${CI_COMMIT_SHA} docker-compose -f docker-compose.yml -f docker-compose.production.yml pull admin || true
    - TAG=${CI_COMMIT_SHA} docker-compose -f docker-compose.yml -f docker-compose.production.yml   --env-file .env up -d admin redis
  tags:
    - docker  
  needs:
    - job: build-admin

# --- PROD ---

prod:nginx:
  stage: deploy
  only:
    refs:
      - master
      - test-ci
    changes:
      - nginx/**/*
  variables:
    DOCKER_HOST: ssh://$DEPLOY_USER_PROD@$DEPLOY_HOST_PROD
  before_script:
    - *before_script_configure_ssh_prod
    - *before_script_docker_login
    - cat $ENV_PROD_FULL_FILE > .env
  script:
    - TAG=${CI_COMMIT_SHA} docker-compose -f docker-compose.yml -f docker-compose.production.yml pull nginx || true
    - TAG=${CI_COMMIT_SHA} docker-compose -f docker-compose.yml -f docker-compose.production.yml --env-file .env up -d nginx
  tags:
    - docker
  when: manual

prod:backend:
  stage: deploy
  only:
    refs:
      - master
      - test-ci
    changes:
      - backend/**/*
  variables:
    DOCKER_HOST: ssh://$DEPLOY_USER_PROD@$DEPLOY_HOST_PROD
  before_script:
    - *before_script_configure_ssh_prod
    - *before_script_docker_login
    - cat $ENV_PROD_FULL_FILE > .env
  script:
    - TAG=${CI_COMMIT_SHA} docker-compose -f docker-compose.yml -f docker-compose.production.yml pull backend || true
    - TAG=${CI_COMMIT_SHA} docker-compose -f docker-compose.yml -f docker-compose.production.yml --env-file .env up -d db backend celery realty beat amo_tasks
  tags:
    - docker
  when: manual

prod:cabinet:
  stage: deploy
  only:
    refs:
      - master
      - test-ci
    changes:
      - cabinet/**/*
  variables:
    DOCKER_HOST: ssh://$DEPLOY_USER_PROD@$DEPLOY_HOST_PROD
  before_script:
    - *before_script_configure_ssh_prod
    - *before_script_docker_login
    - cat $ENV_PROD_FULL_FILE > .env
  script:
    - TAG=${CI_COMMIT_SHA} docker-compose -f docker-compose.yml -f docker-compose.production.yml pull cabinet || true
    - TAG=${CI_COMMIT_SHA} docker-compose -f docker-compose.yml -f docker-compose.production.yml   --env-file .env up -d cabinet tasks
  tags:
    - docker
  when: manual

prod:flower:
  stage: deploy
  only:
    refs:
      - master
      - test-ci
    changes:
      - flower/**/*
  variables:
    DOCKER_HOST: ssh://$DEPLOY_USER_PROD@$DEPLOY_HOST_PROD
  before_script:
    - *before_script_configure_ssh_prod
    - *before_script_docker_login
    - cat $ENV_PROD_FULL_FILE > .env
  script:
    - TAG=${CI_COMMIT_SHA} docker-compose -f docker-compose.yml -f docker-compose.production.yml pull flower || true
    - TAG=${CI_COMMIT_SHA} docker-compose -f docker-compose.yml -f docker-compose.production.yml --env-file .env up -d flower
  tags:
    - docker
  when: manual

prod:admin:
  stage: deploy
  only:
    refs:
      - master
      - test-ci
    changes:
      - admin/**/*
  variables:
    DOCKER_HOST: ssh://$DEPLOY_USER_PROD@$DEPLOY_HOST_PROD
  before_script:
    - *before_script_configure_ssh_prod
    - *before_script_docker_login
    - cat $ENV_PROD_FULL_FILE > .env
  script:
    - TAG=${CI_COMMIT_SHA} docker-compose -f docker-compose.yml -f docker-compose.production.yml pull admin || true
    - TAG=${CI_COMMIT_SHA} docker-compose -f docker-compose.yml -f docker-compose.production.yml   --env-file .env up -d admin
  tags:
    - docker
  when: manual

prod:imageproxy:
  stage: deploy
  only:
    refs:
      - master
      - test-ci
    changes:
      - imageproxy/**/*
  variables:
    DOCKER_HOST: ssh://$DEPLOY_USER_PROD@$DEPLOY_HOST_PROD
  before_script:
    - *before_script_configure_ssh_prod
    - *before_script_docker_login
    - cat $ENV_PROD_FULL_FILE > .env
  script:
    - TAG=${CI_COMMIT_SHA} docker-compose -f docker-compose.yml -f docker-compose.production.yml pull imageproxy || true
    - TAG=${CI_COMMIT_SHA} docker-compose -f docker-compose.yml -f docker-compose.production.yml --env-file .env up -d imageproxy
  tags:
    - docker
  when: manual

  # --- STAGE ---

pre-production:nginx:
  stage: deploy
  only:
    refs:
      - pre-production
    changes:
      - nginx/**/*
  variables:
    DOCKER_HOST: ssh://$DEPLOY_USER_STAGE@$DEPLOY_HOST_STAGE
  before_script:
    - *before_script_configure_ssh_pre-production
    - *before_script_docker_login
    - cat $ENV_STAGE_FULL_FILE > .env
  script:
    - TAG=${CI_COMMIT_SHA} docker-compose -f docker-compose.yml -f docker-compose.production.yml pull nginx || true
    - TAG=${CI_COMMIT_SHA} docker-compose -f docker-compose.yml -f docker-compose.production.yml --env-file .env up -d nginx
  tags:
    - docker
  # when: manual

pre-production:backend:
  stage: deploy
  only:
    refs:
      - pre-production
    changes:
      - backend/**/*
  variables:
    DOCKER_HOST: ssh://$DEPLOY_USER_STAGE@$DEPLOY_HOST_STAGE
  before_script:
    - *before_script_configure_ssh_pre-production
    - *before_script_docker_login
    - cat $ENV_STAGE_FULL_FILE > .env
  script:
    - TAG=${CI_COMMIT_SHA} docker-compose -f docker-compose.yml -f docker-compose.production.yml pull backend || true
    - TAG=${CI_COMMIT_SHA} docker-compose -f docker-compose.yml -f docker-compose.production.yml --env-file .env up -d db backend celery realty beat amo_tasks
  tags:
    - docker
  # when: manual

pre-production:cabinet:
  stage: deploy
  only:
    refs:
      - pre-production
    changes:
      - cabinet/**/*
  variables:
    DOCKER_HOST: ssh://$DEPLOY_USER_STAGE@$DEPLOY_HOST_STAGE
  before_script:
    - *before_script_configure_ssh_pre-production
    - *before_script_docker_login
    - cat $ENV_STAGE_FULL_FILE > .env
  script:
    - TAG=${CI_COMMIT_SHA} docker-compose -f docker-compose.yml -f docker-compose.production.yml pull cabinet || true
    - TAG=${CI_COMMIT_SHA} docker-compose -f docker-compose.yml -f docker-compose.production.yml   --env-file .env up -d cabinet tasks
  tags:
    - docker
  # when: manual

pre-production:flower:
  stage: deploy
  only:
    refs:
      - pre-production
    changes:
      - flower/**/*
  variables:
    DOCKER_HOST: ssh://$DEPLOY_USER_STAGE@$DEPLOY_HOST_STAGE
  before_script:
    - *before_script_configure_ssh_pre-production
    - *before_script_docker_login
    - cat $ENV_STAGE_FULL_FILE > .env
  script:
    - TAG=${CI_COMMIT_SHA} docker-compose -f docker-compose.yml -f docker-compose.production.yml pull flower || true
    - TAG=${CI_COMMIT_SHA} docker-compose -f docker-compose.yml -f docker-compose.production.yml --env-file .env up -d flower
  tags:
    - docker
  # when: manual

pre-production:admin:
  stage: deploy
  only:
    refs:
      - pre-production
    changes:
      - admin/**/*
  variables:
    DOCKER_HOST: ssh://$DEPLOY_USER_STAGE@$DEPLOY_HOST_STAGE
  before_script:
    - *before_script_configure_ssh_pre-production
    - *before_script_docker_login
    - cat $ENV_STAGE_FULL_FILE > .env
  script:
    - TAG=${CI_COMMIT_SHA} docker-compose -f docker-compose.yml -f docker-compose.production.yml pull admin || true
    - TAG=${CI_COMMIT_SHA} docker-compose -f docker-compose.yml -f docker-compose.production.yml   --env-file .env up -d admin
  tags:
    - docker
  # when: manual

pre-production:imageproxy:
  stage: deploy
  only:
    refs:
      - pre-production
    changes:
      - imageproxy/**/*
  variables:
    DOCKER_HOST: ssh://$DEPLOY_USER_STAGE@$DEPLOY_HOST_STAGE
  before_script:
    - *before_script_configure_ssh_pre-production
    - *before_script_docker_login
    - cat $ENV_STAGE_FULL_FILE > .env
  script:
    - TAG=${CI_COMMIT_SHA} docker-compose -f docker-compose.yml -f docker-compose.production.yml pull imageproxy || true
    - TAG=${CI_COMMIT_SHA} docker-compose -f docker-compose.yml -f docker-compose.production.yml --env-file .env up -d imageproxy
  tags:
    - docker
  # when: manual
