# Generated by Django 3.0.14 on 2022-02-10 12:14

import ckeditor.fields
import common.fields
from django.conf import settings
import django.contrib.postgres.fields
from django.db import migrations, models
import django.db.models.deletion
import phonenumber_field.modelfields
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("buildings", "0050_groupsection_plan_night"),
        ("cities", "0025_auto_20210922_1328"),
        ("properties", "0110_merge_20220208_1538"),
        ("projects", "0105_auto_20220210_1514"),
    ]

    operations = [
        migrations.CreateModel(
            name="AboutProject",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
            ],
            options={
                "verbose_name": "О проекте",
                "verbose_name_plural": "О проекте",
            },
        ),
        migrations.CreateModel(
            name="AboutProjectGallery",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                (
                    "image",
                    models.ImageField(blank=True, upload_to="pm/apg/i", verbose_name="Изображение"),
                ),
                ("video", models.FileField(blank=True, upload_to="pm/apg/v", verbose_name="Видео")),
                ("on_map", models.BooleanField(default=False, verbose_name="Ссылка на карту")),
                ("video_url", models.TextField(blank=True, verbose_name="URL для видео")),
                ("tour_url", models.TextField(blank=True, verbose_name="URL для 3Д тура")),
                ("description", ckeditor.fields.RichTextField(blank=True, verbose_name="Описание")),
                ("order", models.PositiveIntegerField(default=0, verbose_name="Очередность")),
            ],
            options={
                "verbose_name": "Галлерея о проекте",
                "verbose_name_plural": "Галлереи о проекте",
                "ordering": ("order",),
            },
        ),
        migrations.CreateModel(
            name="AboutProjectGalleryCategory",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("name", models.CharField(max_length=200, verbose_name="Наименование")),
                (
                    "icon",
                    models.ImageField(
                        blank=True, null=True, upload_to="p/ap/i", verbose_name="Иконка"
                    ),
                ),
                ("description", ckeditor.fields.RichTextField(blank=True, verbose_name="Описание")),
                ("order", models.PositiveIntegerField(default=0, verbose_name="Очередность")),
                (
                    "project",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="projects.Project",
                        verbose_name="Проект",
                    ),
                ),
            ],
            options={
                "verbose_name": "Категории галлерей",
                "verbose_name_plural": "Категории галлерей",
                "ordering": ("order",),
            },
        ),
        migrations.CreateModel(
            name="Client",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("id_crm", models.CharField(blank=True, max_length=200, verbose_name="ID crm")),
                ("name", models.CharField(blank=True, max_length=200, verbose_name="Имя")),
                ("last_name", models.CharField(blank=True, max_length=200, verbose_name="Фамилия")),
                (
                    "patronymic",
                    models.CharField(blank=True, max_length=200, verbose_name="Отчество"),
                ),
                (
                    "phone",
                    phonenumber_field.modelfields.PhoneNumberField(
                        blank=True, max_length=128, null=True, region=None, verbose_name="Телефон"
                    ),
                ),
                (
                    "email",
                    models.EmailField(blank=True, max_length=254, null=True, verbose_name="Email"),
                ),
            ],
            options={
                "verbose_name": "Клиент",
                "verbose_name_plural": "Клиенты",
            },
        ),
        migrations.CreateModel(
            name="Manager",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("login", models.CharField(max_length=200, verbose_name="Логин")),
                (
                    "user",
                    models.OneToOneField(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Пользователь",
                    ),
                ),
            ],
            options={
                "verbose_name": "Менеджер",
                "verbose_name_plural": "Менеджеры",
            },
        ),
        migrations.CreateModel(
            name="Meeting",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("active", models.BooleanField(default=True, verbose_name="Активно")),
                (
                    "datetime_start",
                    models.DateTimeField(blank=True, null=True, verbose_name="Начало встречи"),
                ),
                (
                    "datetime_end",
                    models.DateTimeField(blank=True, null=True, verbose_name="Конеч встречи"),
                ),
                ("comment", models.TextField(blank=True, verbose_name="Комментарий к встрече")),
                (
                    "purchase_purpose",
                    models.IntegerField(
                        blank=True,
                        choices=[(0, "Инвестирование"), (1, "Для себя")],
                        null=True,
                        verbose_name="Цель покупки",
                    ),
                ),
                ("ad_question", models.TextField(blank=True, verbose_name="Реклама")),
                (
                    "stage_solution_question",
                    models.TextField(blank=True, verbose_name="Этап принятия решения"),
                ),
                (
                    "agreed",
                    models.TextField(blank=True, verbose_name="О чем договорились на встрече"),
                ),
                ("adult_count", models.IntegerField(default=0, verbose_name="Количество взрослых")),
                ("child_count", models.IntegerField(default=0, verbose_name="Количество детей")),
                (
                    "child_len",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.IntegerField(blank=True),
                        blank=True,
                        null=True,
                        size=10,
                        verbose_name="Возраст детей",
                    ),
                ),
                ("money", models.IntegerField(default=0, verbose_name="Бюджет")),
                (
                    "area",
                    common.fields.IntegerRangeField(blank=True, null=True, verbose_name="Площадь"),
                ),
                (
                    "floor",
                    common.fields.IntegerRangeField(blank=True, null=True, verbose_name="Этаж"),
                ),
                (
                    "form_pay",
                    models.IntegerField(
                        blank=True,
                        choices=[
                            (714855, "Ипотека"),
                            (714853, "100% оплата"),
                            (714859, "Наличные+мск"),
                            (714861, "Рассрочка"),
                            (714863, "Сертификат"),
                            (1284003, "ипотека+мск"),
                            (1315751, "ипотека+сертификат"),
                            (1315753, "наличные+сертификат"),
                            (1317511, "наличные+сертификат+займ"),
                            (1317513, "наличные+ипотека+сертификат+займ"),
                            (1317551, "наличные+сертификат+займ+мск"),
                            (1317705, "ипотека субсидированная+МСК"),
                            (1318019, "ипотека+займ+сертификат+МСК"),
                            (1324226, "рассрочка+мск"),
                        ],
                        null=True,
                        verbose_name="Форма оплаты",
                    ),
                ),
                (
                    "rooms",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.IntegerField(
                            blank=True,
                            choices=[
                                (1064019, "Студия"),
                                (1064021, "1-ком"),
                                (1064023, "2-ком"),
                                (1064027, "3-ком"),
                                (1064029, "4-ком"),
                                (1064025, "2E"),
                                (1217243, "3E"),
                                (1325414, "4E"),
                                (1217247, "5-ком+"),
                            ],
                            null=True,
                            verbose_name="Комнатность",
                        ),
                        blank=True,
                        null=True,
                        size=100,
                        verbose_name="Комнатность",
                    ),
                ),
                (
                    "another_type",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.IntegerField(
                            blank=True,
                            choices=[
                                (0, "Кладовое помещение"),
                                (1, "Парковочное место"),
                                (2, "Коммерция"),
                                (3, "Апартаменты"),
                            ],
                            null=True,
                            verbose_name="Дополнительные типы",
                        ),
                        blank=True,
                        null=True,
                        size=100,
                    ),
                ),
                ("id_crm", models.CharField(blank=True, max_length=200, verbose_name="ID")),
                (
                    "next_meeting_datetime",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Дата следующего контакта"
                    ),
                ),
                (
                    "next_meeting_type",
                    models.IntegerField(
                        blank=True,
                        choices=[
                            (1323738, "Встреча"),
                            (1323780, "Видеоконференция"),
                            (1325332, "Встреча с такси"),
                            (1327588, "Встреча во Флеш Офисе Колумб"),
                            (1327590, "Встреча во Флеш Офисе Сити молл"),
                        ],
                        null=True,
                        verbose_name="Тип следующего контакта",
                    ),
                ),
                (
                    "mortgage_approved",
                    models.BooleanField(default=False, verbose_name="Ипотека одобрена?"),
                ),
                (
                    "date_reserved",
                    models.DateTimeField(blank=True, null=True, verbose_name="Дата резерва"),
                ),
                (
                    "date_reserved_end",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Дата окончания резерва"
                    ),
                ),
                (
                    "agency_deal",
                    models.BooleanField(default=False, verbose_name="Сделка с Агентством?"),
                ),
                (
                    "meeting_end_type",
                    models.IntegerField(
                        blank=True,
                        choices=[
                            (1, "Встреча назначена"),
                            (2, "Идет встреча"),
                            (3, "Принимают решение"),
                            (4, "Повторная встреча"),
                            (5, "Бронь"),
                        ],
                        null=True,
                        verbose_name="Тип окончания сделки",
                    ),
                ),
                (
                    "booked_property",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="booked_property",
                        to="properties.Property",
                        verbose_name="Забронированное помещение",
                    ),
                ),
                (
                    "city",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="cities.City",
                        verbose_name="Город",
                    ),
                ),
                (
                    "client",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="panel_manager.Client",
                        verbose_name="Клиент",
                    ),
                ),
                (
                    "favorite_property",
                    models.ManyToManyField(
                        blank=True, to="properties.Property", verbose_name="Избранные объекты"
                    ),
                ),
                (
                    "manager",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="panel_manager.Manager",
                        verbose_name="Менеджер",
                    ),
                ),
                (
                    "project",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="projects.Project",
                        verbose_name="Проект",
                    ),
                ),
            ],
            options={
                "verbose_name": "Встреча",
                "verbose_name_plural": "Встречи",
            },
        ),
        migrations.CreateModel(
            name="OurProjects",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                (
                    "maps",
                    models.ImageField(
                        blank=True, upload_to="p/ac/m", verbose_name="Изображение карты"
                    ),
                ),
                (
                    "indicators_one_title",
                    ckeditor.fields.RichTextField(
                        blank=True, verbose_name="Заголовок первого показателя"
                    ),
                ),
                (
                    "indicators_one_description",
                    ckeditor.fields.RichTextField(
                        blank=True, verbose_name="Описание первого показателя"
                    ),
                ),
                (
                    "indicators_two_title",
                    ckeditor.fields.RichTextField(
                        blank=True, verbose_name="Заголовок второго показателя"
                    ),
                ),
                (
                    "indicators_two_description",
                    ckeditor.fields.RichTextField(
                        blank=True, verbose_name="Описание второго показателя"
                    ),
                ),
            ],
            options={
                "verbose_name": "Наши проекты",
                "verbose_name_plural": "Наши проекты",
            },
        ),
        migrations.CreateModel(
            name="PresentationStage",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                (
                    "stage_number",
                    models.PositiveIntegerField(default=0, verbose_name="Номер в стадии"),
                ),
                (
                    "hard_type",
                    models.IntegerField(
                        blank=True,
                        choices=[
                            (0, "Для инвестиций"),
                            (1, "Для собственного проживания"),
                            (3, "Благоустройство"),
                            (4, "Другое"),
                            (5, "Транспортная доступность"),
                            (6, "Ипотека"),
                            (7, "100% оплата"),
                        ],
                        null=True,
                        verbose_name="Тип",
                    ),
                ),
                ("name", models.CharField(max_length=200, verbose_name="Наименование")),
                (
                    "image",
                    models.ImageField(blank=True, upload_to="pm/ps/i", verbose_name="Изображение"),
                ),
                ("description", models.TextField(blank=True, verbose_name="Описание")),
            ],
            options={
                "verbose_name": "Блок построения презентации",
                "verbose_name_plural": "Блоки построения презентации",
            },
        ),
        migrations.CreateModel(
            name="Progress",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("year", models.PositiveIntegerField(verbose_name="Год")),
                (
                    "month",
                    models.CharField(
                        choices=[
                            ("january", "Январь"),
                            ("february", "Февраль"),
                            ("march", "Март"),
                            ("april", "Апрель"),
                            ("may", "Май"),
                            ("june", "Июнь"),
                            ("july", "Июль"),
                            ("august", "Август"),
                            ("september", "Сентябрь"),
                            ("october", "Октябрь"),
                            ("november", "Ноябрь"),
                            ("december", "Декабрь"),
                        ],
                        max_length=20,
                        verbose_name="Месяц",
                    ),
                ),
                (
                    "quarter",
                    models.PositiveSmallIntegerField(
                        choices=[(1, "I"), (2, "II"), (3, "III"), (4, "IV")], verbose_name="Квартал"
                    ),
                ),
                ("active", models.BooleanField(default=True, verbose_name="Активно")),
                ("image", models.ImageField(upload_to="pr/pr/i", verbose_name="Изображение")),
                ("order", models.PositiveSmallIntegerField(verbose_name="Порядок")),
                (
                    "project",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="progress_project",
                        to="projects.Project",
                        verbose_name="Проект",
                    ),
                ),
            ],
            options={
                "verbose_name": "Ход строительства",
                "verbose_name_plural": "Ходы строительства",
                "ordering": ("order",),
            },
        ),
        migrations.CreateModel(
            name="ProgressCategory",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("name", models.CharField(max_length=200, verbose_name="Наименование")),
                (
                    "progress",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="panel_manager.Progress",
                        verbose_name="Ход строительства",
                    ),
                ),
            ],
            options={
                "verbose_name": "Категория хода строительства",
                "verbose_name_plural": "Категория хода строительства",
            },
        ),
        migrations.CreateModel(
            name="StageProjects",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("title", models.CharField(max_length=200, verbose_name="Название")),
                ("color", models.CharField(default="#FFFFFF", max_length=200, verbose_name="Цвет")),
                ("order", models.PositiveSmallIntegerField(default=0, verbose_name="Очередность")),
                (
                    "pin_image",
                    models.FileField(
                        blank=True, upload_to="p/sp/pi", verbose_name="Изображение пина"
                    ),
                ),
            ],
            options={
                "verbose_name": "Стадия проекта",
                "verbose_name_plural": "Стадия проекта",
                "ordering": ("order",),
            },
        ),
        migrations.CreateModel(
            name="Statistic",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("slide", models.TextField(blank=True, verbose_name="Слайд")),
                ("view", models.PositiveIntegerField(default=0, verbose_name="Количество показов")),
                ("time", models.TimeField(blank=True, null=True, verbose_name="Время показа")),
                (
                    "metting",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="panel_manager.Meeting",
                        verbose_name="Встреча",
                    ),
                ),
            ],
            options={
                "verbose_name": "Статистика",
                "verbose_name_plural": "Статистика",
            },
        ),
        migrations.CreateModel(
            name="ProjectsForMap",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("title", ckeditor.fields.RichTextField(blank=True, verbose_name="Заголовок")),
                ("description", ckeditor.fields.RichTextField(blank=True, verbose_name="Описание")),
                (
                    "point",
                    common.fields.PpoiField(
                        blank=True,
                        max_length=50,
                        source="our_project.maps",
                        verbose_name="Координаты точки",
                    ),
                ),
                ("order", models.PositiveSmallIntegerField(default=0, verbose_name="Очередность")),
                (
                    "our_project",
                    models.ForeignKey(
                        default=1,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="panel_manager.OurProjects",
                        verbose_name="Наш проект",
                    ),
                ),
                (
                    "stage",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="panel_manager.StageProjects",
                        verbose_name="Стадия проекта",
                    ),
                ),
            ],
            options={
                "verbose_name": 'Проект в разделе "О компании"',
                "verbose_name_plural": 'Проекты в разделе "О компании"',
                "ordering": ("order",),
            },
        ),
        migrations.CreateModel(
            name="ProgressGallery",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                (
                    "image",
                    models.ImageField(blank=True, upload_to="pm/pg/i", verbose_name="Изображение"),
                ),
                ("video", models.FileField(blank=True, upload_to="pm/pg/v", verbose_name="Видео")),
                ("video_url", models.TextField(blank=True, verbose_name="URL для видео")),
                ("tour_url", models.TextField(blank=True, verbose_name="URL для 3Д тура")),
                ("description", models.TextField(blank=True, verbose_name="Описание")),
                ("order", models.PositiveSmallIntegerField(verbose_name="Порядок")),
                (
                    "buildings",
                    models.ManyToManyField(
                        blank=True, to="buildings.Building", verbose_name="Корпусы"
                    ),
                ),
                (
                    "category",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="panel_manager.ProgressCategory",
                        verbose_name="Категория",
                    ),
                ),
                (
                    "progress",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="panel_manager.Progress",
                        verbose_name="Ход строительства",
                    ),
                ),
            ],
            options={
                "verbose_name": "Галлерея хода строительства",
                "verbose_name_plural": "Галлереи ходов строительства",
                "ordering": ("order",),
            },
        ),
        migrations.CreateModel(
            name="PresentationSteps",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("order", models.PositiveIntegerField(default=0, verbose_name="Очередность")),
                (
                    "aboutprojectgallerycategory",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="panel_manager.AboutProjectGalleryCategory",
                        verbose_name="Категория презентации",
                    ),
                ),
                (
                    "presentationstage",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="panel_manager.PresentationStage",
                        verbose_name="Блок презентации",
                    ),
                ),
            ],
            options={
                "verbose_name": "Шаг презентации",
                "verbose_name_plural": "Шаги презентации",
                "ordering": ("order",),
            },
        ),
        migrations.AddField(
            model_name="presentationstage",
            name="about_project_slides",
            field=models.ManyToManyField(
                blank=True,
                related_name="aboutprojectgallerycategory_rm",
                through="panel_manager.PresentationSteps",
                to="panel_manager.AboutProjectGalleryCategory",
                verbose_name="Категория слайдов",
            ),
        ),
        migrations.CreateModel(
            name="PinsAboutProjectGallery",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                (
                    "pin",
                    common.fields.PpoiField(
                        blank=True,
                        max_length=50,
                        source="image.image",
                        verbose_name="Точка на рендере",
                    ),
                ),
                ("description", ckeditor.fields.RichTextField(blank=True, verbose_name="Описание")),
                ("open", models.BooleanField(default=False, verbose_name="Открыт сразу")),
                (
                    "image",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="panel_manager.AboutProjectGallery",
                        verbose_name="Изображение",
                    ),
                ),
            ],
            options={
                "verbose_name": "Точка на изображении",
                "verbose_name_plural": "Точки на изображении",
            },
        ),
        migrations.CreateModel(
            name="Camera",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("name", models.CharField(max_length=100, verbose_name="Имя")),
                ("active", models.BooleanField(default=True, verbose_name="Активно")),
                ("link", models.URLField(max_length=400, verbose_name="Ссылка")),
                ("order", models.PositiveSmallIntegerField(verbose_name="Порядок")),
                (
                    "project",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="project_camera",
                        to="projects.Project",
                        verbose_name="Проект",
                    ),
                ),
            ],
            options={
                "verbose_name": "Камера",
                "verbose_name_plural": "Камеры",
                "ordering": ("order",),
            },
        ),
        migrations.CreateModel(
            name="AboutProjectParametrs",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("title", ckeditor.fields.RichTextField(blank=True, verbose_name="Заголовок")),
                ("description", ckeditor.fields.RichTextField(blank=True, verbose_name="Описание")),
                (
                    "type",
                    models.IntegerField(
                        choices=[(0, "Оранжевый заголовок"), (1, "Обычный заголовок")],
                        default=1,
                        verbose_name="Тип параметра",
                    ),
                ),
                ("order", models.PositiveIntegerField(default=0, verbose_name="Очередность")),
                (
                    "about_project",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="panel_manager.AboutProject",
                        verbose_name="Страница о проекта",
                    ),
                ),
            ],
            options={
                "verbose_name": "Параметр",
                "verbose_name_plural": "Параметры",
                "ordering": ("order",),
            },
        ),
        migrations.AddField(
            model_name="aboutprojectgallery",
            name="category",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                to="panel_manager.AboutProjectGalleryCategory",
                verbose_name="Категория",
            ),
        ),
    ]
