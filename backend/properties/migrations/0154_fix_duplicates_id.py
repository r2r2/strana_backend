# Generated by Django 3.0.14 on 2022-10-31 09:33

from django.db import migrations
from django.db.models import Count, Max
from django.db import transaction


def fix_duplicate_keys(apps, schema_generator):
    """Поиск и замена дублирующихся значений id."""
    Layout = apps.get_model('properties', 'Layout')
    qs = Layout.objects.order_by('id').annotate(id_cnt=Count('id')).values('id', 'id_cnt').filter(id_cnt__gt=1)
    for item in qs:
        max_id = Layout.objects.aggregate(max_id=Max('id'))['max_id'] + 1
        layouts = Layout.objects.filter(id=item['id'])[1:]
        for layout in layouts:
            layout.id = max_id
            layout.save()
            max_id += 1

def reverse(apps, schema_generator):
    pass


class Migration(migrations.Migration):

    dependencies = [
        ('properties', '0153_property_profitbase_id'),
    ]

    operations = [
        migrations.RunPython(fix_duplicate_keys, reverse)
    ]
