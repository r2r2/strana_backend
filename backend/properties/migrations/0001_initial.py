# Generated by Django 3.0.7 on 2020-06-08 15:36

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [("buildings", "0001_initial"), ("projects", "0001_initial")]

    operations = [
        migrations.CreateModel(
            name="Property",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                (
                    "type",
                    models.CharField(
                        choices=[
                            ("flat", "Квартира"),
                            ("parking", "Парковочное место"),
                            ("commercial", "Коммерческое помещение"),
                        ],
                        db_index=True,
                        max_length=20,
                        verbose_name="Тип",
                    ),
                ),
                (
                    "number",
                    models.CharField(
                        blank=True, db_index=True, max_length=100, verbose_name="Номер"
                    ),
                ),
                (
                    "article",
                    models.CharField(
                        blank=True, db_index=True, max_length=100, verbose_name="Артикул"
                    ),
                ),
                (
                    "price",
                    models.DecimalField(
                        db_index=True, decimal_places=2, max_digits=14, verbose_name="Цена"
                    ),
                ),
                (
                    "original_price",
                    models.DecimalField(
                        blank=True,
                        db_index=True,
                        decimal_places=2,
                        max_digits=14,
                        null=True,
                        verbose_name="Оригинальная цена",
                    ),
                ),
                (
                    "promo_start",
                    models.DateTimeField(
                        blank=True, db_index=True, null=True, verbose_name="Начало скидки"
                    ),
                ),
                (
                    "promo_end",
                    models.DateTimeField(
                        blank=True, db_index=True, null=True, verbose_name="Конец скидки"
                    ),
                ),
                (
                    "price_per_meter",
                    models.DecimalField(
                        blank=True,
                        db_index=True,
                        decimal_places=2,
                        max_digits=14,
                        null=True,
                        verbose_name="Цена за квадратный метр",
                    ),
                ),
                (
                    "area",
                    models.DecimalField(
                        db_index=True, decimal_places=2, max_digits=8, verbose_name="Площадь"
                    ),
                ),
                (
                    "status",
                    models.PositiveSmallIntegerField(
                        choices=[(0, "Свободен"), (1, "Продан"), (2, "Забронирован")],
                        db_index=True,
                        default=0,
                        verbose_name="Статус",
                    ),
                ),
                ("description", models.TextField(blank=True, verbose_name="Описание")),
                (
                    "changed",
                    models.DateTimeField(auto_now=True, db_index=True, verbose_name="Изменено"),
                ),
                (
                    "hash",
                    models.BinaryField(blank=True, max_length=20, null=True, verbose_name="Хэш"),
                ),
                (
                    "rooms",
                    models.PositiveSmallIntegerField(
                        blank=True, db_index=True, null=True, verbose_name="Комнатность"
                    ),
                ),
                (
                    "number_on_floor",
                    models.PositiveSmallIntegerField(
                        blank=True, null=True, verbose_name="Номер на этаже"
                    ),
                ),
                ("is_apartments", models.BooleanField(default=False, verbose_name="Апартаменты")),
                ("is_penthouse", models.BooleanField(default=False, verbose_name="Пентхаус")),
                (
                    "open_plan",
                    models.BooleanField(default=False, verbose_name="Свободная планировка"),
                ),
                ("facing", models.BooleanField(default=False, verbose_name="Отделка")),
                ("has_view", models.BooleanField(default=False, verbose_name="Видовая")),
                (
                    "installment",
                    models.BooleanField(db_index=True, default=False, verbose_name="Рассрочка"),
                ),
                (
                    "living_area",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=8,
                        null=True,
                        verbose_name="Площадь",
                    ),
                ),
                (
                    "kitchen_area",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=8,
                        null=True,
                        verbose_name="Площадь",
                    ),
                ),
                (
                    "bedrooms_count",
                    models.PositiveSmallIntegerField(
                        blank=True, null=True, verbose_name="Количество спален"
                    ),
                ),
                (
                    "loggias_count",
                    models.PositiveSmallIntegerField(
                        blank=True, null=True, verbose_name="Количество лоджей"
                    ),
                ),
                (
                    "balconies_count",
                    models.PositiveSmallIntegerField(
                        blank=True, null=True, verbose_name="Количество балконов"
                    ),
                ),
                (
                    "separate_wcs_count",
                    models.PositiveSmallIntegerField(
                        blank=True, null=True, verbose_name="Количество раздельных санузлов"
                    ),
                ),
                (
                    "combined_wcs_count",
                    models.PositiveSmallIntegerField(
                        blank=True, null=True, verbose_name="Количество совмещённых санузлов"
                    ),
                ),
                (
                    "building",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="buildings.Building",
                        verbose_name="Корпус",
                    ),
                ),
                (
                    "floor",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="buildings.Floor",
                        verbose_name="Этаж",
                    ),
                ),
                (
                    "project",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="projects.Project",
                        verbose_name="Проект",
                    ),
                ),
                (
                    "section",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="buildings.Section",
                        verbose_name="Секция",
                    ),
                ),
            ],
            options={
                "verbose_name": "Объект собственности",
                "verbose_name_plural": "Объекты собственности",
                "ordering": ("id",),
            },
        ),
        migrations.AddConstraint(
            model_name="property",
            constraint=models.UniqueConstraint(
                condition=models.Q(number__isnull=False),
                fields=("project", "number"),
                name="unique_property_project_number",
            ),
        ),
        migrations.AddConstraint(
            model_name="property",
            constraint=models.UniqueConstraint(
                condition=models.Q(article__gt=""),
                fields=("article",),
                name="unique_property_article",
            ),
        ),
    ]
