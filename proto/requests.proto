/**
 * Сообщения клиента
 */
syntax = "proto3";

package sl_messenger_protobuf;

import "messages.proto";

/**
 * Сообщение об активности пользователя.
 * Используется для определения статуса "онлайн"
 */
message SendActivityCommand {
  int32 created_at = 1;  // Дата создания
  /**
   * Опциональное id чата, в котором пользователь в данный момент общается.
   * Используется для корректной доставки обновлений по чатам
   */
  optional int32 chat_id = 2;
  /**
   * Печатает ли пользователь текст в данный момент.
   * Если значение `true`, `chat_id` также должен быть указан
   */
  bool is_typing = 3;
}

/**
 * Команда для отправки нового сообщения в чат
 */
message SendMessageCommand {
  /**
   * Временное id сообщения, генерируется на стороне клиента.
   * Не сохраняется на стороне сервера. Используется для генерации ответа.
   * Рекомендуемый формат - `UUIDv4` в *binary* виде
   */
  bytes temporary_id = 1;
  int32 chat_id = 2;           // ID чата, куда будет отправлено сообщение
  MessageContent content = 3;  // Содержимое сообщения
  optional int32 replied_msg_id = 4; // ID сообщения, на которое отвечает
}

/**
 * Подтверждение от клиента, что он получил назначенное ему сообщение.
 * Используется для обновления статусов доставки сообщений.
 * Достаточно отправить ID последнего полученного сообщения, все сообщения
 * с меньшим ID также будут помечены как полученные
 */
message MessageReceivedCommand {
  int64 message_id = 1;  // ID сообщения
}

/**
 * Подтверждение от клиента, что он прочитал сообщение.
 * Используется для обновления статусов доставки сообщений.
 * Достаточно отправить ID последнего прочитанного сообщения, все сообщения
 * с меньшим ID также будут помечены как прочитанные
 */
message MessageReadCommand {
  int64 message_id = 1;  // ID сообщения
}

/**
 * Команда для отметки сообщения как непрочитанного.
 * Используется для обновления статусов доставки сообщений.
 * Достаточно отправить ID сообщения, которое нужно пометить как непрочитанное,
 * все чужие сообщения с большим ID также будут помечены как непрочитанные
 */
message MessageUnreadCommand {
  int64 message_id = 1;  // ID сообщения
}

/**
 * Команда, чтобы обновить реакцию на сообщение.
 * Если реакция уже была установлена, то она будет удалена.
 */
message SendReactionCommand {
  int64 message_id = 1;  // ID сообщения
  string emoji = 2;  // Реакция
  bool is_deleted = 3;  // Удалить реакцию
}

/**
 * Команда для редактирования сообщения
 */
message EditMessageCommand {
  int64 message_id = 1;  // ID сообщения
  MessageContent content = 2;  // Новое содержимое сообщения
  int32 chat_id = 3;  // ID чата
}

/**
 * Команда для удаления сообщения
 */
message DeleteMessageCommand {
  int64 message_id = 1;  // ID сообщения
  int32 chat_id = 2;  // ID чата
}
